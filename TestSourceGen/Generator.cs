using Microsoft.CodeAnalysis;

namespace TestSourceGen;

[Generator]
public sealed class Generator : IIncrementalGenerator
{
    public void Initialize(IncrementalGeneratorInitializationContext context)
    {
        var valuesProvider = context.SyntaxProvider.ForAttributeWithMetadataName(
            "TestProject.FooAttribute",
            (node, token) => true,
            (syntaxContext, token) =>
            {
                return new Value(syntaxContext.TargetSymbol.Name, syntaxContext.TargetSymbol.ContainingNamespace.Name);
            });

        context.RegisterSourceOutput(valuesProvider, (productionContext, value) =>
        {
            var code = $$"""
                // <auto-generated />
                namespace {{value.Namespace}};
                
                public partial class {{value.Name}}
                {
                    private void Foo()
                    {
                    
                    }
                }
                """;

            productionContext.AddSource($"{value.Name}.cs", code);
        });
    }

    private sealed record Value(string Name, string Namespace);
}